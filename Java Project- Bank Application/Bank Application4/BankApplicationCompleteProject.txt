package com.bikkadIT.BankApplication.controller;

import java.util.Scanner;

import com.bikkadIT.BankApplication.service.SBIBankServiceImpl;

public class Admin {

	public static void main(String[] args) {

		SBIBankServiceImpl bankServiceImpl = new SBIBankServiceImpl();

		System.out.println("----------WELCOME TO BANK---------");
		boolean flag=true;
		while (flag) {
			System.out.println("Press 1 for create account");
			System.out.println("Press 2 for view account");
			System.out.println("Press 3 for withdraw Money");
			System.out.println("Press 4 for deposit account");
			System.out.println("Press 5 for update  account");
			System.out.println("Press 6 for EXIT");

			Scanner sc = new Scanner(System.in);
			int ch = sc.nextInt();

			switch (ch) {

			case 1:

				bankServiceImpl.addAccount();
				break;
			case 2:
				bankServiceImpl.viewAccount();
				break;
			case 3: bankServiceImpl.withDraw();
				break;
			case 4:bankServiceImpl.deposit();	
				break;
			case 5:bankServiceImpl.update();	
			   break;
			case 6:flag=false;
			
				 break;
			
			default:
				System.out.println("Invalid choice");
				break;
			
			}
			System.out.println("Thanks for using Bank services");
		}
	}
	
}




package com.bikkadIT.BankApplication.model;

public class Account {

	private int accno;
	
	private String name;
	
	private String address;
	
	private String panno;
	
	private double balance;

	public int getAccno() {
		return accno;
	}

	public void setAccno(int accno) {
		this.accno = accno;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getPanno() {
		return panno;
	}

	public void setPanno(String panno) {
		this.panno = panno;
	}

	public double getBalance() {
		return balance;
	}

	public void setBalance(double balance) {
		this.balance = balance;
	}

	@Override
	public String toString() {
		return "Account [accno=" + accno + ", name=" + name + ", address=" + address + ", panno=" + panno + ", balance="
				+ balance + "]";
	}
}




package com.bikkadIT.BankApplication.service;

public interface BankServiceI {

	public abstract void addAccount();
	
	public abstract void viewAccount();
	
	public abstract void withDraw();
	
	public abstract void deposit();
	
	public abstract void update();
}




package com.bikkadIT.BankApplication.service;

import java.util.Scanner;

import com.bikkadIT.BankApplication.model.Account;

public class SBIBankServiceImpl implements BankServiceI {

	Account ac = new Account();
	Scanner sc = new Scanner(System.in);

	@Override
	public void addAccount() {

		System.out.println("Enter you account no");
		ac.setAccno(sc.nextInt());

		System.out.println("Enter your name");

		String name = sc.next();
		ac.setName(name);

		System.out.println("Enter your address");
String address = sc.next();
		ac.setAddress(address);

		System.out.println("Enter your pan no");
		String panno = sc.next();
		ac.setPanno(panno);

		System.out.println("Enter amount you want deposit");
		double bal = sc.nextDouble();
		ac.setBalance(bal);

		System.out.println("Your account created successfully");
	}

	@Override
	public void viewAccount() {
		System.out.println("Enter account number");
		int useraccountno = sc.nextInt();
		if (ac.getAccno() == useraccountno) {
			System.out.println("Printing account details using getters");

			System.out.println(ac.getAccno());
			System.out.println(ac.getName());
			System.out.println(ac.getAddress());
			System.out.println(ac.getPanno());
			System.out.println(ac.getBalance());

			System.out.println("Printing account using toString method");
			System.out.println(ac.toString());
		} else {
			System.out.println("create ACCOUNT FIRST");
		}
	}

	@Override
	public void withDraw() {

		System.out.println("Enter account number");
		int userAccno = sc.nextInt();
		if (userAccno == ac.getAccno()) {
			System.out.println("Enter amount to be withdraw");
			double debitamt = sc.nextDouble();
			if (debitamt <= ac.getBalance()) {
				double temp;
				temp = ac.getBalance() - debitamt;
				ac.setBalance(temp);
				System.out.println("Withdraw Successful and your current balance is" + ac.getBalance());
			} else {
				System.out.println("Insufficient fund");
			}

		} else {
			System.out.println("Create Account first");

		}

	}

	@Override
	public void deposit() {

		System.out.println("Enter account no");
		int useraccno = sc.nextInt();
		if (useraccno == ac.getAccno()) {
			System.out.println("Enter amount to be deposit");
			double creditamt = sc.nextDouble();
			double temp1;
			temp1 = ac.getBalance() + creditamt;
			ac.setBalance(temp1);
			System.out.println("deposit successful .Your current balance is :" + ac.getBalance());
		} else {
			System.out.println("Create Account first");
		}

	}

	@Override
	public void update() {
		System.out.println("Enter your account  number");
		int useracc = sc.nextInt();
		if (useracc == ac.getAccno()) {
			boolean flag = true;
			while (flag) {
				System.out.println("Press 1  for update name");
				System.out.println("Press 2  for update address");
				System.out.println("Press 3  for update panno");
				System.out.println("Press 4  for EXIT");

				int ch = sc.nextInt();

				switch (ch) {

				case 1:
					System.out.println("Enter name you want to update");
					String name = sc.next();
					ac.setName(name);
					System.out.println("Name Updated successfully " + ac.getName());
					break;
				case 2:
					break;
				case 3:
					break;
				case 4:
					flag = false;
					break;
				default:
					System.out.println("Invalid choice");
					break;
				}
			}
		} else {
			System.out.println("create Account first");

		}
	}

}
