Finally block:

Finally block always executed there is exception in try block or there is no exception in try block.

Example : 1) If database connection is open that connection colse inside finally block.
1) If file is open then file should be close inside finally block.

Syntax:

1) 

                try {
		
		}catch(ArithmeticException e) {
			
		}
		finally {
			
		}


2)             try {
	         }
		finally {
			
		}
3) one try block can have only one finally block.

           try {
		}
		finally {
			
		}
		finally {
			
		}

4)finally block should be at bottom .

   try {
		}
       finally {
			
		} 
		catch(ArithmeticException e) {
			
		}


Rule 1: If there is exception in try block then finally block will be Executed.

Example :


package finallyblock;

public class FinallyDemo {

	public static void main(String[] args) {
		
		try {
			int a=10;
			int b=0;
			int c=a/b;
		}
		catch(ArithmeticException e) {
			System.out.println(e);
		}finally {
			System.out.println("finally block executed");
		}
		
		
	}
	
}


Rule no 2:If there is no exception in try block then finally block will be exceuted.


package finallyblock;

public class FinallyDemo {

	public static void main(String[] args) {
		
		try {
			int a=10;
			int b=2;
			int c=a/b;
			System.out.println(c);
		}
		catch(ArithmeticException e) {
			System.out.println(e);
		}finally {
			System.out.println("finally block executed");
		}
	
	}
	
}





















